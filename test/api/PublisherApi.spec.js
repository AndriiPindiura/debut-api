/**
 * backend
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Backend);
  }
}(this, function(expect, Backend) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Backend.PublisherApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PublisherApi', function() {
    describe('publisherCount', function() {
      it('should call publisherCount successfully', function(done) {
        //uncomment below and update the code to test publisherCount
        //instance.publisherCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherCreate', function() {
      it('should call publisherCreate successfully', function(done) {
        //uncomment below and update the code to test publisherCreate
        //instance.publisherCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherCreateChangeStreamGetPublishersChangeStream', function() {
      it('should call publisherCreateChangeStreamGetPublishersChangeStream successfully', function(done) {
        //uncomment below and update the code to test publisherCreateChangeStreamGetPublishersChangeStream
        //instance.publisherCreateChangeStreamGetPublishersChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherCreateChangeStreamPostPublishersChangeStream', function() {
      it('should call publisherCreateChangeStreamPostPublishersChangeStream successfully', function(done) {
        //uncomment below and update the code to test publisherCreateChangeStreamPostPublishersChangeStream
        //instance.publisherCreateChangeStreamPostPublishersChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherDeleteById', function() {
      it('should call publisherDeleteById successfully', function(done) {
        //uncomment below and update the code to test publisherDeleteById
        //instance.publisherDeleteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherExistsGetPublishersidExists', function() {
      it('should call publisherExistsGetPublishersidExists successfully', function(done) {
        //uncomment below and update the code to test publisherExistsGetPublishersidExists
        //instance.publisherExistsGetPublishersidExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherExistsHeadPublishersid', function() {
      it('should call publisherExistsHeadPublishersid successfully', function(done) {
        //uncomment below and update the code to test publisherExistsHeadPublishersid
        //instance.publisherExistsHeadPublishersid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherFind', function() {
      it('should call publisherFind successfully', function(done) {
        //uncomment below and update the code to test publisherFind
        //instance.publisherFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherFindById', function() {
      it('should call publisherFindById successfully', function(done) {
        //uncomment below and update the code to test publisherFindById
        //instance.publisherFindById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherFindOne', function() {
      it('should call publisherFindOne successfully', function(done) {
        //uncomment below and update the code to test publisherFindOne
        //instance.publisherFindOne(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPatchOrCreate', function() {
      it('should call publisherPatchOrCreate successfully', function(done) {
        //uncomment below and update the code to test publisherPatchOrCreate
        //instance.publisherPatchOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeCountFeeds', function() {
      it('should call publisherPrototypeCountFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeCountFeeds
        //instance.publisherPrototypeCountFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeCreateFeeds', function() {
      it('should call publisherPrototypeCreateFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeCreateFeeds
        //instance.publisherPrototypeCreateFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeDeleteFeeds', function() {
      it('should call publisherPrototypeDeleteFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeDeleteFeeds
        //instance.publisherPrototypeDeleteFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeDestroyByIdFeeds', function() {
      it('should call publisherPrototypeDestroyByIdFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeDestroyByIdFeeds
        //instance.publisherPrototypeDestroyByIdFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeFindByIdFeeds', function() {
      it('should call publisherPrototypeFindByIdFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeFindByIdFeeds
        //instance.publisherPrototypeFindByIdFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeGetFeeds', function() {
      it('should call publisherPrototypeGetFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeGetFeeds
        //instance.publisherPrototypeGetFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypePatchAttributes', function() {
      it('should call publisherPrototypePatchAttributes successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypePatchAttributes
        //instance.publisherPrototypePatchAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherPrototypeUpdateByIdFeeds', function() {
      it('should call publisherPrototypeUpdateByIdFeeds successfully', function(done) {
        //uncomment below and update the code to test publisherPrototypeUpdateByIdFeeds
        //instance.publisherPrototypeUpdateByIdFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherReplaceByIdPostPublishersidReplace', function() {
      it('should call publisherReplaceByIdPostPublishersidReplace successfully', function(done) {
        //uncomment below and update the code to test publisherReplaceByIdPostPublishersidReplace
        //instance.publisherReplaceByIdPostPublishersidReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherReplaceByIdPutPublishersid', function() {
      it('should call publisherReplaceByIdPutPublishersid successfully', function(done) {
        //uncomment below and update the code to test publisherReplaceByIdPutPublishersid
        //instance.publisherReplaceByIdPutPublishersid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherReplaceOrCreatePostPublishersReplaceOrCreate', function() {
      it('should call publisherReplaceOrCreatePostPublishersReplaceOrCreate successfully', function(done) {
        //uncomment below and update the code to test publisherReplaceOrCreatePostPublishersReplaceOrCreate
        //instance.publisherReplaceOrCreatePostPublishersReplaceOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherReplaceOrCreatePutPublishers', function() {
      it('should call publisherReplaceOrCreatePutPublishers successfully', function(done) {
        //uncomment below and update the code to test publisherReplaceOrCreatePutPublishers
        //instance.publisherReplaceOrCreatePutPublishers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherUpdateAll', function() {
      it('should call publisherUpdateAll successfully', function(done) {
        //uncomment below and update the code to test publisherUpdateAll
        //instance.publisherUpdateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publisherUpsertWithWhere', function() {
      it('should call publisherUpsertWithWhere successfully', function(done) {
        //uncomment below and update the code to test publisherUpsertWithWhere
        //instance.publisherUpsertWithWhere(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
