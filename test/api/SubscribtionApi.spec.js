/**
 * backend
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Backend);
  }
}(this, function(expect, Backend) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Backend.SubscribtionApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubscribtionApi', function() {
    describe('subscribtionCount', function() {
      it('should call subscribtionCount successfully', function(done) {
        //uncomment below and update the code to test subscribtionCount
        //instance.subscribtionCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionCreate', function() {
      it('should call subscribtionCreate successfully', function(done) {
        //uncomment below and update the code to test subscribtionCreate
        //instance.subscribtionCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionCreateChangeStreamGetSubscribtionsChangeStream', function() {
      it('should call subscribtionCreateChangeStreamGetSubscribtionsChangeStream successfully', function(done) {
        //uncomment below and update the code to test subscribtionCreateChangeStreamGetSubscribtionsChangeStream
        //instance.subscribtionCreateChangeStreamGetSubscribtionsChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionCreateChangeStreamPostSubscribtionsChangeStream', function() {
      it('should call subscribtionCreateChangeStreamPostSubscribtionsChangeStream successfully', function(done) {
        //uncomment below and update the code to test subscribtionCreateChangeStreamPostSubscribtionsChangeStream
        //instance.subscribtionCreateChangeStreamPostSubscribtionsChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionDeleteById', function() {
      it('should call subscribtionDeleteById successfully', function(done) {
        //uncomment below and update the code to test subscribtionDeleteById
        //instance.subscribtionDeleteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionExistsGetSubscribtionsidExists', function() {
      it('should call subscribtionExistsGetSubscribtionsidExists successfully', function(done) {
        //uncomment below and update the code to test subscribtionExistsGetSubscribtionsidExists
        //instance.subscribtionExistsGetSubscribtionsidExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionExistsHeadSubscribtionsid', function() {
      it('should call subscribtionExistsHeadSubscribtionsid successfully', function(done) {
        //uncomment below and update the code to test subscribtionExistsHeadSubscribtionsid
        //instance.subscribtionExistsHeadSubscribtionsid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionFind', function() {
      it('should call subscribtionFind successfully', function(done) {
        //uncomment below and update the code to test subscribtionFind
        //instance.subscribtionFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionFindById', function() {
      it('should call subscribtionFindById successfully', function(done) {
        //uncomment below and update the code to test subscribtionFindById
        //instance.subscribtionFindById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionFindOne', function() {
      it('should call subscribtionFindOne successfully', function(done) {
        //uncomment below and update the code to test subscribtionFindOne
        //instance.subscribtionFindOne(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionPatchOrCreate', function() {
      it('should call subscribtionPatchOrCreate successfully', function(done) {
        //uncomment below and update the code to test subscribtionPatchOrCreate
        //instance.subscribtionPatchOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionPrototypePatchAttributes', function() {
      it('should call subscribtionPrototypePatchAttributes successfully', function(done) {
        //uncomment below and update the code to test subscribtionPrototypePatchAttributes
        //instance.subscribtionPrototypePatchAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionReplaceByIdPostSubscribtionsidReplace', function() {
      it('should call subscribtionReplaceByIdPostSubscribtionsidReplace successfully', function(done) {
        //uncomment below and update the code to test subscribtionReplaceByIdPostSubscribtionsidReplace
        //instance.subscribtionReplaceByIdPostSubscribtionsidReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionReplaceByIdPutSubscribtionsid', function() {
      it('should call subscribtionReplaceByIdPutSubscribtionsid successfully', function(done) {
        //uncomment below and update the code to test subscribtionReplaceByIdPutSubscribtionsid
        //instance.subscribtionReplaceByIdPutSubscribtionsid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionReplaceOrCreatePostSubscribtionsReplaceOrCreate', function() {
      it('should call subscribtionReplaceOrCreatePostSubscribtionsReplaceOrCreate successfully', function(done) {
        //uncomment below and update the code to test subscribtionReplaceOrCreatePostSubscribtionsReplaceOrCreate
        //instance.subscribtionReplaceOrCreatePostSubscribtionsReplaceOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionReplaceOrCreatePutSubscribtions', function() {
      it('should call subscribtionReplaceOrCreatePutSubscribtions successfully', function(done) {
        //uncomment below and update the code to test subscribtionReplaceOrCreatePutSubscribtions
        //instance.subscribtionReplaceOrCreatePutSubscribtions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionUpdateAll', function() {
      it('should call subscribtionUpdateAll successfully', function(done) {
        //uncomment below and update the code to test subscribtionUpdateAll
        //instance.subscribtionUpdateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribtionUpsertWithWhere', function() {
      it('should call subscribtionUpsertWithWhere successfully', function(done) {
        //uncomment below and update the code to test subscribtionUpsertWithWhere
        //instance.subscribtionUpsertWithWhere(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
