/**
 * backend
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Backend);
  }
}(this, function(expect, Backend) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Backend.EditorRoleApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EditorRoleApi', function() {
    describe('editorRoleCount', function() {
      it('should call editorRoleCount successfully', function(done) {
        //uncomment below and update the code to test editorRoleCount
        //instance.editorRoleCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleCreate', function() {
      it('should call editorRoleCreate successfully', function(done) {
        //uncomment below and update the code to test editorRoleCreate
        //instance.editorRoleCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleCreateChangeStreamGetEditorRolesChangeStream', function() {
      it('should call editorRoleCreateChangeStreamGetEditorRolesChangeStream successfully', function(done) {
        //uncomment below and update the code to test editorRoleCreateChangeStreamGetEditorRolesChangeStream
        //instance.editorRoleCreateChangeStreamGetEditorRolesChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleCreateChangeStreamPostEditorRolesChangeStream', function() {
      it('should call editorRoleCreateChangeStreamPostEditorRolesChangeStream successfully', function(done) {
        //uncomment below and update the code to test editorRoleCreateChangeStreamPostEditorRolesChangeStream
        //instance.editorRoleCreateChangeStreamPostEditorRolesChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleDeleteById', function() {
      it('should call editorRoleDeleteById successfully', function(done) {
        //uncomment below and update the code to test editorRoleDeleteById
        //instance.editorRoleDeleteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleExistsGetEditorRolesidExists', function() {
      it('should call editorRoleExistsGetEditorRolesidExists successfully', function(done) {
        //uncomment below and update the code to test editorRoleExistsGetEditorRolesidExists
        //instance.editorRoleExistsGetEditorRolesidExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleExistsHeadEditorRolesid', function() {
      it('should call editorRoleExistsHeadEditorRolesid successfully', function(done) {
        //uncomment below and update the code to test editorRoleExistsHeadEditorRolesid
        //instance.editorRoleExistsHeadEditorRolesid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleFind', function() {
      it('should call editorRoleFind successfully', function(done) {
        //uncomment below and update the code to test editorRoleFind
        //instance.editorRoleFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleFindById', function() {
      it('should call editorRoleFindById successfully', function(done) {
        //uncomment below and update the code to test editorRoleFindById
        //instance.editorRoleFindById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleFindOne', function() {
      it('should call editorRoleFindOne successfully', function(done) {
        //uncomment below and update the code to test editorRoleFindOne
        //instance.editorRoleFindOne(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRolePatchOrCreate', function() {
      it('should call editorRolePatchOrCreate successfully', function(done) {
        //uncomment below and update the code to test editorRolePatchOrCreate
        //instance.editorRolePatchOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRolePrototypePatchAttributes', function() {
      it('should call editorRolePrototypePatchAttributes successfully', function(done) {
        //uncomment below and update the code to test editorRolePrototypePatchAttributes
        //instance.editorRolePrototypePatchAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleReplaceByIdPostEditorRolesidReplace', function() {
      it('should call editorRoleReplaceByIdPostEditorRolesidReplace successfully', function(done) {
        //uncomment below and update the code to test editorRoleReplaceByIdPostEditorRolesidReplace
        //instance.editorRoleReplaceByIdPostEditorRolesidReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleReplaceByIdPutEditorRolesid', function() {
      it('should call editorRoleReplaceByIdPutEditorRolesid successfully', function(done) {
        //uncomment below and update the code to test editorRoleReplaceByIdPutEditorRolesid
        //instance.editorRoleReplaceByIdPutEditorRolesid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleReplaceOrCreatePostEditorRolesReplaceOrCreate', function() {
      it('should call editorRoleReplaceOrCreatePostEditorRolesReplaceOrCreate successfully', function(done) {
        //uncomment below and update the code to test editorRoleReplaceOrCreatePostEditorRolesReplaceOrCreate
        //instance.editorRoleReplaceOrCreatePostEditorRolesReplaceOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleReplaceOrCreatePutEditorRoles', function() {
      it('should call editorRoleReplaceOrCreatePutEditorRoles successfully', function(done) {
        //uncomment below and update the code to test editorRoleReplaceOrCreatePutEditorRoles
        //instance.editorRoleReplaceOrCreatePutEditorRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleUpdateAll', function() {
      it('should call editorRoleUpdateAll successfully', function(done) {
        //uncomment below and update the code to test editorRoleUpdateAll
        //instance.editorRoleUpdateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorRoleUpsertWithWhere', function() {
      it('should call editorRoleUpsertWithWhere successfully', function(done) {
        //uncomment below and update the code to test editorRoleUpsertWithWhere
        //instance.editorRoleUpsertWithWhere(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
