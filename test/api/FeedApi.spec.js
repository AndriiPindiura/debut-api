/**
 * backend
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Backend);
  }
}(this, function(expect, Backend) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Backend.FeedApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FeedApi', function() {
    describe('feedCount', function() {
      it('should call feedCount successfully', function(done) {
        //uncomment below and update the code to test feedCount
        //instance.feedCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedCreate', function() {
      it('should call feedCreate successfully', function(done) {
        //uncomment below and update the code to test feedCreate
        //instance.feedCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedCreateChangeStreamGetFeedsChangeStream', function() {
      it('should call feedCreateChangeStreamGetFeedsChangeStream successfully', function(done) {
        //uncomment below and update the code to test feedCreateChangeStreamGetFeedsChangeStream
        //instance.feedCreateChangeStreamGetFeedsChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedCreateChangeStreamPostFeedsChangeStream', function() {
      it('should call feedCreateChangeStreamPostFeedsChangeStream successfully', function(done) {
        //uncomment below and update the code to test feedCreateChangeStreamPostFeedsChangeStream
        //instance.feedCreateChangeStreamPostFeedsChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedDeleteById', function() {
      it('should call feedDeleteById successfully', function(done) {
        //uncomment below and update the code to test feedDeleteById
        //instance.feedDeleteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedExistsGetFeedsidExists', function() {
      it('should call feedExistsGetFeedsidExists successfully', function(done) {
        //uncomment below and update the code to test feedExistsGetFeedsidExists
        //instance.feedExistsGetFeedsidExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedExistsHeadFeedsid', function() {
      it('should call feedExistsHeadFeedsid successfully', function(done) {
        //uncomment below and update the code to test feedExistsHeadFeedsid
        //instance.feedExistsHeadFeedsid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedFind', function() {
      it('should call feedFind successfully', function(done) {
        //uncomment below and update the code to test feedFind
        //instance.feedFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedFindById', function() {
      it('should call feedFindById successfully', function(done) {
        //uncomment below and update the code to test feedFindById
        //instance.feedFindById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedFindOne', function() {
      it('should call feedFindOne successfully', function(done) {
        //uncomment below and update the code to test feedFindOne
        //instance.feedFindOne(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPatchOrCreate', function() {
      it('should call feedPatchOrCreate successfully', function(done) {
        //uncomment below and update the code to test feedPatchOrCreate
        //instance.feedPatchOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeCountArticles', function() {
      it('should call feedPrototypeCountArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeCountArticles
        //instance.feedPrototypeCountArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeCountEditors', function() {
      it('should call feedPrototypeCountEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeCountEditors
        //instance.feedPrototypeCountEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeCountSubscribers', function() {
      it('should call feedPrototypeCountSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeCountSubscribers
        //instance.feedPrototypeCountSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeCreateArticles', function() {
      it('should call feedPrototypeCreateArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeCreateArticles
        //instance.feedPrototypeCreateArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeCreateEditors', function() {
      it('should call feedPrototypeCreateEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeCreateEditors
        //instance.feedPrototypeCreateEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeCreateSubscribers', function() {
      it('should call feedPrototypeCreateSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeCreateSubscribers
        //instance.feedPrototypeCreateSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeDeleteArticles', function() {
      it('should call feedPrototypeDeleteArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeDeleteArticles
        //instance.feedPrototypeDeleteArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeDeleteEditors', function() {
      it('should call feedPrototypeDeleteEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeDeleteEditors
        //instance.feedPrototypeDeleteEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeDeleteSubscribers', function() {
      it('should call feedPrototypeDeleteSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeDeleteSubscribers
        //instance.feedPrototypeDeleteSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeDestroyByIdArticles', function() {
      it('should call feedPrototypeDestroyByIdArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeDestroyByIdArticles
        //instance.feedPrototypeDestroyByIdArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeDestroyByIdEditors', function() {
      it('should call feedPrototypeDestroyByIdEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeDestroyByIdEditors
        //instance.feedPrototypeDestroyByIdEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeDestroyByIdSubscribers', function() {
      it('should call feedPrototypeDestroyByIdSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeDestroyByIdSubscribers
        //instance.feedPrototypeDestroyByIdSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeExistsEditors', function() {
      it('should call feedPrototypeExistsEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeExistsEditors
        //instance.feedPrototypeExistsEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeExistsSubscribers', function() {
      it('should call feedPrototypeExistsSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeExistsSubscribers
        //instance.feedPrototypeExistsSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeFindByIdArticles', function() {
      it('should call feedPrototypeFindByIdArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeFindByIdArticles
        //instance.feedPrototypeFindByIdArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeFindByIdEditors', function() {
      it('should call feedPrototypeFindByIdEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeFindByIdEditors
        //instance.feedPrototypeFindByIdEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeFindByIdSubscribers', function() {
      it('should call feedPrototypeFindByIdSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeFindByIdSubscribers
        //instance.feedPrototypeFindByIdSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeGetArticles', function() {
      it('should call feedPrototypeGetArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeGetArticles
        //instance.feedPrototypeGetArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeGetEditors', function() {
      it('should call feedPrototypeGetEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeGetEditors
        //instance.feedPrototypeGetEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeGetPublisher', function() {
      it('should call feedPrototypeGetPublisher successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeGetPublisher
        //instance.feedPrototypeGetPublisher(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeGetSubscribers', function() {
      it('should call feedPrototypeGetSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeGetSubscribers
        //instance.feedPrototypeGetSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeLinkEditors', function() {
      it('should call feedPrototypeLinkEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeLinkEditors
        //instance.feedPrototypeLinkEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeLinkSubscribers', function() {
      it('should call feedPrototypeLinkSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeLinkSubscribers
        //instance.feedPrototypeLinkSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypePatchAttributes', function() {
      it('should call feedPrototypePatchAttributes successfully', function(done) {
        //uncomment below and update the code to test feedPrototypePatchAttributes
        //instance.feedPrototypePatchAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeUnlinkEditors', function() {
      it('should call feedPrototypeUnlinkEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeUnlinkEditors
        //instance.feedPrototypeUnlinkEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeUnlinkSubscribers', function() {
      it('should call feedPrototypeUnlinkSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeUnlinkSubscribers
        //instance.feedPrototypeUnlinkSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeUpdateByIdArticles', function() {
      it('should call feedPrototypeUpdateByIdArticles successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeUpdateByIdArticles
        //instance.feedPrototypeUpdateByIdArticles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeUpdateByIdEditors', function() {
      it('should call feedPrototypeUpdateByIdEditors successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeUpdateByIdEditors
        //instance.feedPrototypeUpdateByIdEditors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedPrototypeUpdateByIdSubscribers', function() {
      it('should call feedPrototypeUpdateByIdSubscribers successfully', function(done) {
        //uncomment below and update the code to test feedPrototypeUpdateByIdSubscribers
        //instance.feedPrototypeUpdateByIdSubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedReplaceByIdPostFeedsidReplace', function() {
      it('should call feedReplaceByIdPostFeedsidReplace successfully', function(done) {
        //uncomment below and update the code to test feedReplaceByIdPostFeedsidReplace
        //instance.feedReplaceByIdPostFeedsidReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedReplaceByIdPutFeedsid', function() {
      it('should call feedReplaceByIdPutFeedsid successfully', function(done) {
        //uncomment below and update the code to test feedReplaceByIdPutFeedsid
        //instance.feedReplaceByIdPutFeedsid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedReplaceOrCreatePostFeedsReplaceOrCreate', function() {
      it('should call feedReplaceOrCreatePostFeedsReplaceOrCreate successfully', function(done) {
        //uncomment below and update the code to test feedReplaceOrCreatePostFeedsReplaceOrCreate
        //instance.feedReplaceOrCreatePostFeedsReplaceOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedReplaceOrCreatePutFeeds', function() {
      it('should call feedReplaceOrCreatePutFeeds successfully', function(done) {
        //uncomment below and update the code to test feedReplaceOrCreatePutFeeds
        //instance.feedReplaceOrCreatePutFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedUpdateAll', function() {
      it('should call feedUpdateAll successfully', function(done) {
        //uncomment below and update the code to test feedUpdateAll
        //instance.feedUpdateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedUpsertWithWhere', function() {
      it('should call feedUpsertWithWhere successfully', function(done) {
        //uncomment below and update the code to test feedUpsertWithWhere
        //instance.feedUpsertWithWhere(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
