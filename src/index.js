/**
 * backend
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessToken from './model/AccessToken';
import Article from './model/Article';
import Client from './model/Client';
import EditorRole from './model/EditorRole';
import Feed from './model/Feed';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import Publisher from './model/Publisher';
import Subscribtion from './model/Subscribtion';
import User from './model/User';
import Version from './model/Version';
import ArticleApi from './api/ArticleApi';
import ClientApi from './api/ClientApi';
import EditorRoleApi from './api/EditorRoleApi';
import FeedApi from './api/FeedApi';
import PublisherApi from './api/PublisherApi';
import SubscribtionApi from './api/SubscribtionApi';
import UserApi from './api/UserApi';
import VersionApi from './api/VersionApi';


/**
* ERROR_UNKNOWN.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var api = require('index'); // See note below*.
* var xxxSvc = new api.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new api.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken,

    /**
     * The Article model constructor.
     * @property {module:model/Article}
     */
    Article,

    /**
     * The Client model constructor.
     * @property {module:model/Client}
     */
    Client,

    /**
     * The EditorRole model constructor.
     * @property {module:model/EditorRole}
     */
    EditorRole,

    /**
     * The Feed model constructor.
     * @property {module:model/Feed}
     */
    Feed,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The Publisher model constructor.
     * @property {module:model/Publisher}
     */
    Publisher,

    /**
     * The Subscribtion model constructor.
     * @property {module:model/Subscribtion}
     */
    Subscribtion,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
    * The ArticleApi service constructor.
    * @property {module:api/ArticleApi}
    */
    ArticleApi,

    /**
    * The ClientApi service constructor.
    * @property {module:api/ClientApi}
    */
    ClientApi,

    /**
    * The EditorRoleApi service constructor.
    * @property {module:api/EditorRoleApi}
    */
    EditorRoleApi,

    /**
    * The FeedApi service constructor.
    * @property {module:api/FeedApi}
    */
    FeedApi,

    /**
    * The PublisherApi service constructor.
    * @property {module:api/PublisherApi}
    */
    PublisherApi,

    /**
    * The SubscribtionApi service constructor.
    * @property {module:api/SubscribtionApi}
    */
    SubscribtionApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi,

    /**
    * The VersionApi service constructor.
    * @property {module:api/VersionApi}
    */
    VersionApi
};
